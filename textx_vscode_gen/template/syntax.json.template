{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "workflow",
  "scopeName": "source.workflow",
  "fileTypes": [
    ".wf"
  ],
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#string"
    },
    {
      "include": "#number"
    },
    {
      "include": "#language_keyword"
    },
    {
      "include": "#language_operation"
    },
    {
      "include": "#regular_expression"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line",
          "match": "//.*$"
        },
        {
          "name": "comment.block",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "name": "string.quoted.single",
          "begin": "'",
          "end": "'"
        },
        {
          "name": "string.quoted.double",
          "begin": "\"",
          "end": "\""
        }
      ]
    },
    "number": {
      "patterns": [
        {
          "name": "constant.numeric",
          "match": "[0-9.]+"
        }
      ]
    },
    "language_keyword": {
      "patterns": [
        {
          "name": "storage.type",
          "match": "(workflow({|}|,)*$|workflow({|}|,)* |init({|}|,)*$|init({|}|,)* )",
          "captures": {
            "1": {
              "patterns": [
                {
                  "name": "emphasis",
                  "match": "({|})"
                },
                {
                  "name": "storage.type",
                  "match": "(,)"
                }
              ]
            }
          }
        },
        {
          "name": "entity.name.class",
          "match": "(task({|}|,)*$|task({|}|,)* )",
          "captures": {
            "1": {
              "patterns": [
                {
                  "name": "emphasis",
                  "match": "({|})"
                },
                {
                  "name": "storage.type",
                  "match": "(,)"
                }
              ]
            }
          }
        },
        {
          "name": "support.variable",
          "match": "(entry({|}|,)*$|entry({|}|,)* |leave({|}|,)*$|leave({|}|,)* )",
          "captures": {
            "1": {
              "patterns": [
                {
                  "name": "emphasis",
                  "match": "({|})"
                },
                {
                  "name": "storage.type",
                  "match": "(,)"
                }
              ]
            }
          }
        },
        {
          "name": "storage.modifier",
          "match": "(next({|}|,)*$|next({|}|,)* )",
          "captures": {
            "1": {
              "patterns": [
                {
                  "name": "emphasis",
                  "match": "({|})"
                },
                {
                  "name": "storage.type",
                  "match": "(,)"
                }
              ]
            }
          }
        },
        {
          "name": "meta.tag",
          "match": "(action({|}|,)*$|action({|}|,)* )",
          "captures": {
            "1": {
              "patterns": [
                {
                  "name": "emphasis",
                  "match": "({|})"
                },
                {
                  "name": "storage.type",
                  "match": "(,)"
                }
              ]
            }
          }
        }
      ]
    },
    "language_operation": {
      "patterns": [
        {
          "name": "emphasis",
          "match": "({|})"
        },
        {
          "name": "storage.type",
          "match": "(,)"
        }
      ]
    },
    "regular_expression": {
      "patterns": []
    }
  }
}
